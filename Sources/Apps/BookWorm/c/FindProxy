#include <stdio.h>
#include "swis.h"
#include "inetlib.h"
#include "unixlib.h"
#include "findproxy.h"

static const struct in_addr null_ip={0};

static struct in_addr ip_from_aun(int net, int station)
{
    int n=0;
    int net_number;
    struct in_addr net_address;

    while (n!=-1)
    {
        _swix(Econet_EnumerateMap, _IN(0)|_IN(4)|_OUT(1)|_OUTR(3,4),
                                   0, n, &net_number, &net_address, &n);

        if (n==-1)
            return null_ip;

        if (net_number==net)
        {
            net_address.s_addr |= htonl(station);
            return net_address;
        }
    }

    return null_ip;
}

struct in_addr find_station(char *name)
{
    _kernel_oserror *e;
    int net, station;

    e=_swix(Econet_ReadStationNumber, _IN(1)|_OUTR(2,3), name, &station, &net);
    if (!e && station!=-1)
    {
        if (net==-1)
        {
            e=_swix(Econet_ReadLocalStationAndNet, _OUT(1), &net);
            if (e)
                return null_ip;
        }
        return ip_from_aun(net, station);
    }

    return null_ip;
}

#define Freeway_Enumerate 0x47a83

struct in_addr find_share(char *discname)
{
    int n=0;
    _kernel_oserror *e;
    char buffer[256];
    struct in_addr ip;
    static const struct in_addr null_ip={0};

    while (n != -1)
    {
        e=_swix(Freeway_Enumerate, _INR(0,7)|_OUTR(6,7),
                                            0, /* Enumerate unauthenticated */
                                            1, /* Disc objects */
                                            sizeof buffer,
                                            buffer,
                                            0,
                                            0,
                                            0,
                                            n,
                                            &ip,
                                            &n);

        if (e || n==-1)
            return null_ip;

        if (strcasecmp(discname, buffer)==0)
            return ip;
    }
    return null_ip;
}
