
#define VERSION  "1.00 (12-Feb-97)"

/*

  Browser by Merlyn Kline 1995

:MESSAGES
HdINFO:This dialogue box tells you about the software|MAlways quote the version number in any communications concerning this software.
:END

:HISTORY
:END

*/

#include "stdlib.h"
#include "stdio.h"
#include "string.h"

#include "swis.h"
#include "os.h"
#include "bbc.h"
#include "wimp.h"
#include "wimpt.h"
#include "win.h"
#include "sprite.h"
#include "msgs.h"
#include "resspr.h"
#include "flex.h"
#include "baricon.h"
#include "visdelay.h"
#include "template.h"
#include "event.h"
#include "res.h"
#include "help.h"

#include "3DStuff.h"
#include "Graphics.h"
#include "DragLib.h"
#include "Iconbar.h"
#include "Bone.h"
#include "Iconbar.h"
#include "dboxfix.h"
#include "ErrorGen.h"
#include "FontManage.h"
#include "Browser.h"
#include "Printing.h"
#include "Main.h"
#include "mflex.h"

/*----------------------------------------------------------------------*/
char progname[16];
/*----------------------------------------------------------------------*/
BOOL riscosii;
/*----------------------------------------------------------------------*/
int  anim_length; /* number of sprites in animation (including #0) */
/*----------------------------------------------------------------------*/
int  anim_width; /* width of animation sprites (OS units) */
/*----------------------------------------------------------------------*/
int  anim_height; /* height of animation sprites (OS units) */
/*----------------------------------------------------------------------*/
int  bullets; /* number of bullets available */

#include "Menudefs.c"

/*----------------------------------------------------------------------*/
#ifdef EVAL
/*----------------------------------------------------------------------*/
int evaltime;
/*----------------------------------------------------------------------*/
#endif

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
static char *version_string(void)
{
static char v[20];

strcpy(v,VERSION);
/*if(v[2]!='0') strcat(v," * UNFINISHED *");*/
return(v);
}

/*----------------------------------------------------------------------*/
os_error *main_proginfo(void)
{
dbox info;

info=dbox_new("info");
if(!info)
  return(errorgen(2));
else
  {
  dbox_raw_eventhandler(info,help_dboxrawevents,"HdINFO");
  dbox_setfield(info,1,progname+1);
  dbox_setfield(info,4,version_string());
  dbox_show(info);
  dbox_fillin(info);
  dbox_dispose(&info);
  }
return(NULL);
}

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
static void init_animation(void)
{
  int         i;
  sprite_id   spr;
  sprite_info info,info0;
  char        sprname[20];

  i=0;
  spr.tag=sprite_id_name;
  spr.s.name=sprname;
  strcpy(sprname,"a0");
  if(!sprite_readsize(resspr_area(),&spr,&info0))
  {
    do
    {
      i++;
      sprintf(sprname,"a%d",i);
    } while(!sprite_readsize(resspr_area(),&spr,&info));
  }
  anim_width=anim_height=0;
  anim_length=i;
  if(i>0)
  {
    anim_width=info0.width<<bbc_modevar(info0.mode,bbc_XEigFactor);
    anim_height=info0.height<<bbc_modevar(info0.mode,bbc_YEigFactor);
  }
}

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
static void init_bullets(void)
{
  int         i;
  sprite_id   spr;
  sprite_info info,info0;
  char        sprname[20];

  i=0;
  spr.tag=sprite_id_name;
  spr.s.name=sprname;
  strcpy(sprname,"b0");
  if(!sprite_readsize(resspr_area(),&spr,&info0))
  {
    do
    {
      i++;
      sprintf(sprname,"b%d",i);
    } while(!sprite_readsize(resspr_area(),&spr,&info));
  }
  bullets=i;
}

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
#define message_URLACTION 0x4AF80

static BOOL initialise(void)
/* Initialise risc os library */
{
  static wimp_msgaction messages[]={
    Browser_Message_PrintFile,
    Browser_Message_PrintSave,
    Browser_Message_PrintError,
    Browser_Message_PrintTypeOdd,
    message_URLACTION,
    0x400c9, /* Message_MenusDeleted */
    wimp_MDATASAVE,
    wimp_MDATASAVEOK,
    wimp_MDATALOAD,
    wimp_MDATALOADOK,
    wimp_MDATAOPEN,
    wimp_MRAMFETCH,
    wimp_MRAMTRANSMIT,
    wimp_MPREQUIT,
    wimp_PALETTECHANGE,
    wimp_MDATASAVED,
    wimp_MMENUWARN,
    wimp_MMODECHANGE,
    wimp_MHELPREQUEST,
    wimp_MHELPREPLY,
    wimp_MCLOSEDOWN
    };

  os_read_var_val("Obey$Leaf", progname, sizeof(progname));
  if(!*progname) strcpy(progname,"!Phileas");
  wimpt_messages(messages);
  wimpt_wimpversion(300);
  riscosii=(wimpt_init(progname+1)<=299);
  res_init(progname+1);
  resspr_init();
  msgs_init();
  template_init();
  mflex_init();
  graphics_checkmode(TRUE);
  #ifdef SINGLE_USER
  baricon("!app",(int)resspr_area(),iconbar_click);
  win_register_event_handler(win_ICONBARLOAD,iconbar_event,0);
  #endif
  if(!define_menus()) return(FALSE);
  drag_use_unknown_events();
  #ifdef SINGLE_USER
  win_add_unknown_event_processor(iconbar_unknown_event,0);
  if(!event_attachmenumaker(win_ICONBAR,iconbar_menumaker,iconbar_menuproc,m_browse)) return(FALSE);
  #else
  file_create_unique_post_box_file_name();
  #endif
  choices_create();
  fm_init(FALSE);
  fm_define_default_typefaces();
  fm_define_typeface("dialogue=;sans");
  loadprefs();
  if(params.systemfont) fm_set_system_font(TRUE);
#ifdef EVAL
  os_swi1r(OS_ReadMonotonicTime,0,&evaltime);
  evaltime+=100*60*20;
#endif
  init_animation();
  init_bullets();
  memset(&user,0,sizeof(user));
  return(TRUE);
}

extern void __heap_checking_on_all_allocates(int on);
extern void __heap_checking_on_all_deallocates(int on);

/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

int __root_stack_size=32*1024;


int main(int argc,char *argv[])
{
  BOOL initialised;
  char *supplieduser=0, *suppliedpass=0;

  /*__heap_checking_on_all_allocates(1);
  __heap_checking_on_all_deallocates(1);*/

  if(!global_fixed_ptr()) visdelay_begin();
  initialised=initialise();
  visdelay_end();
  if(initialised)
  {
  #ifdef EVAL
    werr(0,msgs_lookup("Eval:** WARNING ** This is an evaluation version of "
                       "this software with restricted functions. A full "
                       "version can be obtained from Minerva Software on "
                       "(01392) 437756 (+44 1392 437756)."));
  #endif


  #ifndef SINGLE_USER
  baricon("gbrowser",(int)resspr_area(),iconbar_click);

  while (*params.post_in == '\0' || *params.post_out == '\0' ||
         !file_exists(params.post_in) || !file_exists(params.post_out))
  {
      /* Install query icon to icon bar */
      baricon_newsprite("qbrowser");
      win_add_unknown_event_processor(iconbar_unknown_event,0);
      if(!event_attachmenumaker(win_ICONBAR,iconbar_menumaker,iconbar_menuproc,m_browse)) return(FALSE);
      re_login=FALSE; /* Hack - re-use this flag */
      while (!re_login)
        event_process();
      baricon_newsprite("gbrowser");
  }
  win_claim_idle_events(win_ICONBAR);

  if (argc == 3 && strcmp(argv[1], "-file") != 0)
  {
      supplieduser=argv[1];
      suppliedpass=argv[2];
  }
  do
  {
    re_login=logged_in=FALSE;

    /* do login */
    if (supplieduser)
    {
        iconbar_read_user(supplieduser, suppliedpass);
        supplieduser=0;
    }
    else
        wimpt_complain(iconbar_login());

    // Hijack iconbar events until logged in
    win_read_eventhandler(win_ICONBAR, &old_iconbar_handler, &old_iconbar_handle);
    win_register_event_handler(win_ICONBAR, check_login, 0);

    //idle_register_user(check_login, 0, TRUE);
    event_setmask((wimp_emask)0);
    while (!re_login && !logged_in)
      event_process();

    win_register_event_handler(win_ICONBAR, old_iconbar_handler, old_iconbar_handle);
    //win_claim_idle_events((wimp_w) -1);
    //event_setmask(wimp_EMNULL);
  } while (re_login);

  if(!event_attachmenumaker(win_ICONBAR,iconbar_menumaker,iconbar_menuproc,m_browse)) return(FALSE);
  win_add_unknown_event_processor(iconbar_unknown_event,0);

  win_register_event_handler(win_ICONBARLOAD,iconbar_event,0);
  win_claim_idle_events((wimp_w) -1);
  baricon_newsprite("!app");
  #else
  logged_in=TRUE;
  wimpt_complain(iconbar_login());
  #endif

    if(argc>2 && strcmp(argv[1], "-file") == 0)
    {
      char url[300];

      STRFILL(url,argv[2]);
      browser_pathname_to_url(url,sizeof(url));
      wimpt_complain(iconbar_newview(url));
    }
    else if (argc == 2)
    {
      char url[300];

      STRFILL(url,argv[1]);
      browser_pathname_to_url(url,sizeof(url));
      wimpt_complain(iconbar_newview(url));
    }

    while(TRUE) event_process();

  }
  wimpt_complain(errorgen(1));
  return(1);
}
