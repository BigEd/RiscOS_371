
/*
    Error Management Code
    Merlyn Kline, 1992

 errorgen()
    Creates error structures from error numbers or (if error > 0x8000)
    stores existing errors for later reporting.

 errorgen_complain()
    does a wimpt_complain() with errorgen

:MESSAGES
ERR01:Initialisation failed. Please reset your computer and try again.
ERR02:Not enough free memory. Please free some memory and try again.
ERR03:The hot list is full. Please delete an entry and try again.
ERR04:You must enter a user name to login and use the World Wide Web.
ERR05:Fetch interrupted.
ERR06:Authorisation failed. You must use a valid username and password.
ERR07:No postboxes available at server. Wait a moment and try again.
ERR08:Error writing to server postbox. Wait a moment and try again.
ERR09:Incorrect user name or password.
ERR0A:Error reading from server postbox. Wait a moment and try again.
ERR0B:Server not responding.
ERR0C:Sorry, you are not authorised to access the World Wide Web.
ERR0D:Unable to find the named shared disc
ERR0E:Unable to find the chosen AUN station
:END

*/

#include "stdio.h"
#include "string.h"

#ifndef __wimpt_h
#include "wimpt.h"
#endif

#ifndef __msgs_h
#include "msgs.h"
#endif

#ifndef __os_h
#include "os.h"
#endif

#include "ErrorGen.h"

/*------------------------------------------------------------------------*/
#ifndef ERROUT
/*------------------------------------------------------------------------*/
#define ERROUT(f) {os_error *EE=(f); if(EE) return(EE);}
/*------------------------------------------------------------------------*/
#endif

/*------------------------------------------------------------------------*/
os_error *errorgen(int err)
{
static os_error e;
char            junk[260];

if(err<0x8000)
  {
  sprintf(junk,"ERR%02X",err);
  strncpy(e.errmess,msgs_lookup(junk),sizeof(e.errmess)-1);
  e.errmess[sizeof(e.errmess)-1]=0;
  e.errnum=err+0x803c0;
  }
else
  e=*(os_error*)err;
return(&e);
}

/*------------------------------------------------------------------------*/
void errorgen_complain(int err)
{
wimpt_complain(errorgen(err));
}

/*------------------------------------------------------------------------*/
os_error *errorgen_tag(char *tag)
{
  os_error e;

  strncpy(e.errmess,msgs_lookup(tag),sizeof(e.errmess)-1);
  e.errmess[sizeof(e.errmess)-1]=0;
  e.errnum=0x803c0;
  return(errorgen((int)&e));
}
