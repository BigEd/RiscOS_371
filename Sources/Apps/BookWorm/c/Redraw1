
/*

  Redraw support module

:HISTORY
    18/10/94  MK   Created
:END

:MESSAGES
:END
*/

/*----------------------------------------------------------------------*/
#include "wimp.h"
#include "coords.h"
#include "bbc.h"

#include "3DStuff.h"

/*----------------------------------------------------------------------*/
#define CVTSTR(redrawstr) ((coords_cvtstr*)(&((redrawstr)->box)))

/*------------------------------------------------------------------------*/
BOOL redraw1_boxesoverlap(wimp_box *b0,wimp_box *b1)
{ /* see if two top-right exclusive boxes overlap */
return(b0->x1>b1->x0 && b0->x0<b1->x1 && b0->y1>b1->y0 && b0->y0<b1->y1);
}

/*----------------------------------------------------------------------*/
void redraw1_rectangle_fill(int x,int y,int w,int h,wimp_redrawstr *r)
{
bbc_rectanglefill(coords_x_toscreen(x,CVTSTR(r)),coords_y_toscreen(y,CVTSTR(r)),w,h);
}

/*----------------------------------------------------------------------*/
void redraw1_hole_around(int x,int y,int w,int h,wimp_redrawstr *r)
{
wimp_box box;

box.x0=x-4;
box.y0=y-4;
box.x1=x+w+4+1;
box.y1=y+h+4+1;
coords_box_toscreen(&box,CVTSTR(r));
d3_outline_hole(&box,&r->g);
}

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
static BOOL redraw1_point_in_box(int x,int y,wimp_box *box)
{
return(x>=box->x0 && x<box->x1 &&y>=box->y0 && y<box->y1);
}

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
static int redraw1_clip_box(wimp_box *rbox,wimp_box *gbox)
{
/*
   Attempts to clip rbox to be that part of rbox which overlaps gbox
   if gbox is entirely inside rbox, set rbox to gbox.

   Returns a flag indicating if any change was made to rbox:
       0=rbox entirely outside gbox
       1=gbox entirely inside rbox
       2=rbox is the overlap
*/
char corner[2];

if(!redraw1_boxesoverlap(rbox,gbox)) return(0);
corner[0]=redraw1_point_in_box(gbox->x0,gbox->y0,rbox);
corner[1]=redraw1_point_in_box(gbox->x1,gbox->y1,rbox);
if(corner[0] && corner[1])
  {
  /* gbox is entirely inside rbox so return it */
  *rbox=*gbox;
  return(1);
  }
if(rbox->x0<gbox->x0) rbox->x0=gbox->x0;
if(rbox->y0<gbox->y0) rbox->y0=gbox->y0;
if(rbox->x1>gbox->x1) rbox->x1=gbox->x1;
if(rbox->y1>gbox->y1) rbox->y1=gbox->y1;
return(2);
}

/*------------------------------------------------------------------------*/
void redraw1_set_gwindow(wimp_box *g)
{
/* set the graphics window to the given top-right exclusive box */
bbc_gwindow(g->x0,g->y0,g->x1-1,g->y1-1);
}

/*------------------------------------------------------------------------*/
BOOL redraw1_set_gwindow_overlap(wimp_box *b,wimp_box *g)
{
/* set the graphics window to the overlap between b and g
   (g is the current graphics window, b is the box about to be drawn)
   return a flag saying whether the window was set (if not, b was entirely outside g)  */
wimp_box mb;
int      ret;

mb=*b;
ret=redraw1_clip_box(&mb,g);
if (ret) redraw1_set_gwindow(&mb);
return(ret!=0);
}

